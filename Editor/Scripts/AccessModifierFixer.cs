using UnityEditor;
using UnityEngine;
using System.IO;
using System.Text.RegularExpressions;

namespace com.absence.variablesystem.editor
{
    /// <summary>
    /// Generated by ChatGPT.
    /// </summary>
    internal static class AccessModifierFixer
    {
        // Add a menu item under "Tools" in the Unity toolbar
        //[MenuItem("Tools/Convert Public Types to Internal in Imported Assemblies")]
        public static void ConvertPublicToInternal()
        {
            // Add or change these paths to match your package structure
            string[] targetFolders = new[] {
            "Packages/com.absence.variablesystem/SerializedDictionary-main/Runtime",
            "Packages/com.absence.variablesystem/SerializedDictionary-main/Editor"
            };

            int fileCount = 0;
            int updatedCount = 0;

            foreach (var folder in targetFolders)
            {
                if (!Directory.Exists(folder))
                {
                    Debug.LogWarning($"Folder not found: {folder}");
                    continue;
                }

                string[] files = Directory.GetFiles(folder, "*.cs", SearchOption.AllDirectories);
                foreach (string filePath in files)
                {
                    fileCount++;
                    string content = File.ReadAllText(filePath);

                    // Only replace public before a type definition (class, struct, etc.)
                    string updated = Regex.Replace(
                        content,
                        @"(?<!\w)(public)(\s+)(class|struct|interface|enum|delegate)\b",
                        "internal$2$3"
                    );

                    if (updated != content)
                    {
                        File.WriteAllText(filePath, updated);
                        Debug.Log($"✔ Updated: {filePath}");
                        updatedCount++;
                    }
                }
            }

            AssetDatabase.Refresh();
            Debug.Log($"✅ Done. Scanned {fileCount} files, updated {updatedCount}.");
        }
    }

}
